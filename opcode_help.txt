basic command structure:

most commands effect one or tow of the 16 registers
to address these registers 4 bit are needed for each
for every command that effects registers the ammount of affected/used registers times four is reserved at the end of the opcode to adress the registers
theoretically that implies, that for every register combination of every register effecting/using operation there is a unique opcode
if additional data, such as a address or some other in place defined value is needed, it will be stored after the opcode
in theory there is no limit to the ammount of immediate values that follow the opcode
the loading of immediate values and the incrementation of the program counter is handled by the execution of each individual command
the handeling of every single command should be handled on its own
some operations may have options which may or may not be implemented seperate (matter of debate after final operation number is known)
the most significant X bits of every opcode should be useable to extract rising numbers starting at 0 without any empty slot
X must be evaluated after a decision on all availabe operations is made
with the isolated indices of the operations the execution handler of the specified operation is placed in an array of operation handlers
every operation handler must follow the same function structure
the handlers have no return value and are reciving two parameters, a pointer to the vm and a copy of the already read opcode


basic idea of needed opcodes:

AND
EOR
SUB
RSB
ADD
ADC
SBC
RSC
TST
TEQ
CMP
CMN
ORR
MOV
BIC
MVN
MUL
MLA
LDR
STR
BR
BRL
SWI
